{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "API for working with the database for the Tasteorama website.",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This API was created by a student team to work with a NoSQL MongoDB database."
  },
  "servers": [
    {
      "url": "https://recepy-api.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Categories",
      "description": "Categories operations."
    },
    {
      "name": "Users",
      "description": "Users operations."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Registration user",
        "operationId": "registerUser",
        "description": "Registration new user in App",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/register-request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create a new user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered and logged a user!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/register-pesponse"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login user",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "user`s email",
                    "example": "stepan@ukr.da"
                  },
                  "password": {
                    "type": "string",
                    "description": "User`s password",
                    "example": 12345678
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "Token for access",
                          "example": "5H4mA9kN4mMs5teK8gobAU4qblreV+DjjQby3kxz"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Email or passwort is incorrect"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout user",
        "security": [],
        "responses": {
          "204": {
            "description": "Successfully logout"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh token user",
        "operationId": "refreshUser",
        "description": "Refresh token user",
        "security": [],
        "responses": {
          "200": {
            "description": "Refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "Refresh Token for access",
                          "example": "5H4mA9kN4mMs5teK8gobAU4qblreV+DjjQby3kxz"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Session not found/Refreschtoken is invalid/Session token expired"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/ingredients": {
      "get": {
        "tags": [
          "Ingredients"
        ],
        "summary": "Get all ingredients",
        "operationId": "getIngredients",
        "description": "Returns a list of all ingredients",
        "security": [],
        "responses": {
          "200": {
            "description": "List of ingredients",
    "/categories/all": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get all categories",
        "operationId": "getCategories",
        "description": "Returns the list of recipe categories",
        "security": [],
        "responses": {
          "200": {
            "description": "Category list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ingredients"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
                    "message": {
                      "type": "string",
                      "example": "Successful request for all categories"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/getAllCategories"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get users info",
        "operationId": "getUserInfo",
        "description": "Get info about current user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get info about current user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found info about current user"
                    },
                    "data": {
                      "$ref": "#/components/schemas/users"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "register-request": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Stepan Bandera"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "stepan@ukr.da"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "step123an"
          }
        }
      },
      "register-pesponse": {
        "type": "object",
        "required": [
          "name",
          "email",
          "accessToken"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 16,
            "description": "User`s name",
            "example": "Stepan Bandera"
          },
          "email": {
            "type": "string",
            "maxLength": 128,
            "description": "user`s email",
            "example": "stepan@ukr.da"
          },
          "accessToken": {
            "type": "string",
            "description": "Token for access",
            "example": "5H4mA9kN4mMs5teK8gobAU4qblreV+DjjQby3kxz"
          }
        }
      },
      "ingredients": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "640c2dd963a319ea671e37aa"
          },
          "name": {
            "type": "string",
            "example": "Squid"
          },
          "desc": {
            "type": "string",
            "example": "A type of cephalopod with a soft, cylindrical body and long tentacles."
          },
          "img": {
            "type": "string",
            "example": "https://ftp.goit.study/img/so-yummy/ingredients/640c2dd963a319ea671e37aa.jpg"
      "getAllCategories": {
        "type": "object",
        "required": [
          "_id",
          "name"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Mongo ObjectId",
            "example": "6462a9cd4c3d0qqq28391f8a"
          },
          "name": {
            "type": "string",
            "description": "Name categories",
            "example": "Lamb"
          }
        }
      },
      "users": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Users id",
            "example": "685e5951b883f8c0dbc569a0"
          },
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 16,
            "description": "Users name",
            "example": "Steve"
          },
          "email": {
            "type": "string",
            "maxLength": 128,
            "pattern": "/.+@.+\\..+/",
            "description": "Users email",
            "example": "steve@main.kraft"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Contact created at",
            "example": "2025-06-27T08:41:53.166Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Contact updated at",
            "example": "2025-06-27T08:41:53.166Z"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad Request"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Error"
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Email in use"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    }
  }
}